#!/usr/bin/env python

from gdextension_build import ffmpeg_download
from gdextension_build import methods
from pathlib import Path
import os

Import("env")

if not "RPATH" in env:
    env.Append(RPATH=env.Literal("\\$$ORIGIN"))

env_ffmpeg = env.Clone()

env_ffmpeg.Depends("thirdparty/ffmpeg/", "gdextension_build/ffmpeg_download.py")
env_ffmpeg.CommandNoCache(
    "thirdparty/ffmpeg/",
    "gdextension_build/ffmpeg_download.py",
    env_ffmpeg.Run(ffmpeg_download.download_ffmpeg, "Downloading FFMPEG library"),
)

module_obj = []

excluded = []

sources = [x for x in Glob("*.cpp") if str(x) not in excluded]

env_ffmpeg.Prepend(CPPPATH="thirdparty/ffmpeg/include")
env.Append(LIBPATH="/home/eirexe/repos/godot-ph4/modules/ffmpeg/thirdparty/ffmpeg/lib")
ffmpeg_libs = ["avcodec", "avfilter", "avformat", "avutil", "swresample", "swscale"]
env.Append(LIBS=ffmpeg_libs)

ffmpeg_libs_to_install = []

if env["platform"] == "linuxbsd":
    for lib in ffmpeg_libs:
        # Make sure we copy the ffmpeg library with the correct version extension
        lib_file_name = f"lib{lib}.so"
        lib_so_path = f"thirdparty/ffmpeg/lib/{lib_file_name}"
        if os.path.isfile(lib_so_path):
            lib_soname = methods.get_soname(lib_so_path)
            if lib_soname:
                ffmpeg_libs_to_install.append(f"thirdparty/ffmpeg/lib/{lib_soname}")

env_ffmpeg.Install("#bin", ffmpeg_libs_to_install)

# env_ffmpeg.Append(CPPDEFINES=["FFMPEG_MT_GPU_UPLOAD"])
if ARGUMENTS.get("ffmpeg_shared", "no") == "yes":
    # Shared lib compilation
    env_ffmpeg.Append(CCFLAGS=["-fPIC"])
    env_ffmpeg["LIBS"] = FFMPEG_LIBS
    shared_lib = env_ffmpeg.SharedLibrary(target="#bin/ffmpeg", source=sources)
    shared_lib_shim = shared_lib[0].name.rsplit(".", 1)[0]
    env.Append(LIBPATH=["#bin"])
    env.Append(LIBS=[shared_lib_shim])
else:
    env_ffmpeg.add_source_files(module_obj, sources)
    env.Depends(module_obj, "thirdparty/ffmpeg/")
    env.modules_sources += module_obj
